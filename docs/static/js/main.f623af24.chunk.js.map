{"version":3,"sources":["Components/AddCategory.js","helpers/GetGift.js","Components/GiftItem.js","Components/GiftGrid.js","hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setstate","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GetGift","category","a","url","encodeURI","fetch","resp","json","data","giftl","map","img","id","title","images","downsized_medium","console","log","GiftItem","className","src","alt","GiftGrid","loading","state","useEffect","then","UseFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEbC,mBAAS,IAFI,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEO,sBAAOC,SAbM,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAS,MAQV,SACC,uBACAO,KAAK,OACLC,MAAOT,EACPU,SArBY,SAACP,GAClBF,EAASE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAbO,kBAcZA,GAdY,4CAAH,sDCCPS,EAAW,SAAC,GAAoB,IAAnBN,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OAFAa,QAAQC,IAAI,CAACL,KAAGC,QAAMV,QAGlB,sBAAKgB,UAAU,gDAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACnB,kCAAKA,EAAL,WCHCS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBnC,EADsB,KA8BpC,OAzBAoC,qBAAU,WAEFzB,EAAQC,GAEPyB,MAAK,SAAAf,GAEEtB,EAAS,CACLmB,KAAMG,EACNY,SAAQ,SAIzB,CAACtB,IAaGuB,EDzBeG,CAAa1B,GAA9BO,EAF+B,EAE/BA,KAAMe,EAFyB,EAEzBA,QAoCX,OAjCFP,QAAQC,IAAIM,GAkCN,qCACA,qBAAIJ,UAAU,2CAAd,cAA2DlB,EAA3D,OACCsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEV,qBAAKA,UAAU,YAAf,SAESX,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAA4BA,GAAbA,EAAIC,aEhB1BgB,EAhCM,WAAI,MAGczC,mBAAS,CAAC,SAHxB,mBAGf0C,EAHe,KAGH3C,EAHG,KAUjB,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAED,6BACK2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEvB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCnBrB6B,IAASC,OAGR,cAAC,EAAD,IAECC,SAASC,eAAe,W","file":"static/js/main.f623af24.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setstate] = useState('')\r\n    \r\n    const cambioInput = (e)=>{\r\n       setstate(e.target.value);\r\n       \r\n    }\r\n    const handleSubmit= (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats =>[ inputValue, ...cats] );\r\n            setstate('');\r\n        }\r\n        \r\n        //console.log('Submit hecho');\r\n        \r\n    }\r\n    return (\r\n         \r\n           <form  onSubmit={handleSubmit}> \r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={cambioInput}\r\n              />\r\n            </form>\r\n        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const GetGift = async(category)=>{ //funcion de async \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=TzAZbsVYxhqPt89UI9sHOy530jLw3JjV&q=${encodeURI(category)}&limit=15`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const giftl = data.map(img =>{\r\n        return {\r\n            id: img.id ,\r\n            title: img.title,\r\n            url : img.images.downsized_medium.url,\r\n            \r\n        }\r\n    })\r\n    console.log(giftl);\r\n    return giftl;\r\n       // setimages(giftl);\r\n    \r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GiftItem = ({id,title,url}) => {\r\n\r\n    console.log({id,title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDownBig\" >\r\n           <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useEffect, useState } from 'react'\r\nimport React  from 'react';\r\nimport { UseFetchGifs } from '../hooks/UseFetchGifs';\r\n//import { getGift } from '../helpers/GetGift';\r\nimport { GiftItem } from './GiftItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    \r\n  const {data, loading} = UseFetchGifs(category);\r\n\r\n  //console.log(sate);\r\n  console.log(loading);\r\n  \r\n\r\n    /*\r\n    const [images, setimages] = useState([])\r\n\r\n    \r\n    useEffect(()=>{\r\n       getGift(category).then(setimages)\r\n\r\n    },[category]);\r\n    */ \r\n /* \r\n    const getGift = async()=>{ //funcion de async \r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=TzAZbsVYxhqPt89UI9sHOy530jLw3JjV&q=${encodeURI(category)}&limit=15`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const giftl = data.map(img =>{\r\n            return {\r\n                id: img.id ,\r\n                title: img.title,\r\n                url : img.images.downsized_medium.url,\r\n                \r\n            }\r\n        })\r\n        console.log(giftl);\r\n        setimages(giftl);\r\n\r\n\r\n    }*/\r\n    //getGift();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInDownBig\"> {category} </h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n          <div className=\"card-grid\">\r\n               {   \r\n                   data.map(img =>\r\n                    ( <GiftItem key={img.id}  {...img } /> ))\r\n\r\n               }\r\n          \r\n            </div>\r\n             \r\n        </>\r\n    )\r\n    \r\n}\r\n","import {useEffect, useState } from \"react\"\r\nimport {GetGift} from '../helpers/GetGift';\r\n\r\nexport const UseFetchGifs = (category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() => {\r\n\r\n            GetGift(category)\r\n\r\n            .then(img =>{\r\n                \r\n                    setstate({\r\n                        data: img ,\r\n                        loading:false\r\n                    });\r\n      })  \r\n\r\n    }, [category])\r\n    \r\n    /** \r\n    setTimeout( ()=>{\r\n        setstate({\r\n            data: [1,2,3,4,5],\r\n            loading:false\r\n        })\r\n\r\n    },3000);\r\n*/\r\n\r\n    \r\n    return state//data:[],loading:true};\r\n\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GiftGrid } from './Components/GiftGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n   // const categorias = ['Dragon ball','One punch','Naruto'];\r\n  \r\n   const [categories, setCategories] = useState(['Goku']);\r\n   /*\r\n   const add = ()=>{\r\n\r\n    setCategories([ 'kakaroto', ...categories]);\r\n    setCategories(cats =>[ 'kakaroto', ...categories] );\r\n   }*/\r\n        return(\r\n            <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories} />\r\n\r\n            <hr />\r\n            \r\n           <ol>\r\n               {categories.map(category =>\r\n               \r\n               (<GiftGrid\r\n                key={category}\r\n                category= {category} /> ) )      \r\n\r\n               }\r\n             \r\n           </ol>\r\n\r\n            </>\r\n        );\r\n}\r\n\r\nexport default GifExpertApp; \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    \n <GifExpertApp/>,\n\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}